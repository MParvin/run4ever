name: Build Run4Ever

on:
  push:
    branches: [ "master" ]

env:
  DOCKER_IMG: mparvin/run4ever

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Install dependencies
      run: go mod tidy

    - name: Build
      run: |
        go build -o run4ever-linux-x86_64
        GOOS=darwin GOARCH=amd64 go build -o run4ever-darwin-amd64
        GOOS=windows GOARCH=amd64 go build -o run4ever-windows-amd64.exe
        GOOS=linux GOARCH=arm64 go build -o run4ever-linux-arm64
        GOOS=linux GOARCH=386 go build -o run4ever-linux-386
        chmod +x run4ever-linux-x86_64 run4ever-darwin-amd64 run4ever-linux-arm64 run4ever-linux-386

    - name: Test
      run: go test -v ./...

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $DOCKER_IMG:${{ github.sha }}
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      
    - name: Push the Docker image
      run: docker push $DOCKER_IMG:${{ github.sha }}

    - name: Push to Docker registry with latest tag
      run: docker tag $DOCKER_IMG:${{ github.sha }} $DOCKER_IMG:latest && docker push $DOCKER_IMG:latest

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ghcr.io/mparvin/run4ever:latest

    - name: Add Linux64 release to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./run4ever-linux-x86_64
        asset_name: run4ever-linux-x86_64
        asset_content_type: application/octet-stream

    - name: Add Darwin64 release to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./run4ever-darwin-amd64
        asset_name: run4ever-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Add Windows64 release to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./run4ever-windows-amd64.exe
        asset_name: run4ever-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Add LinuxArm64 release to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./run4ever-linux-arm64
        asset_name: run4ever-linux-arm64
        asset_content_type: application/octet-stream

    - name: Add Linux386 release to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./run4ever-linux-386
        asset_name: run4ever-linux-386
        asset_content_type: application/octet-stream
